# Generated by Django 5.1.4 on 2024-12-24 17:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='course_covers/')),
                ('class_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('bullet_points', models.JSONField(blank=True, help_text="Formato: ['punto 1', 'punto 2', ...]", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='course_covers/')),
                ('course_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('level', models.CharField(blank=True, max_length=100, null=True)),
                ('bullet_points', models.JSONField(blank=True, help_text="Formato: ['punto 1', 'punto 2', ...]", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MediaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('audio', 'Audio'), ('video', 'Video')], max_length=10)),
                ('file', models.FileField(upload_to='task_media/')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassContentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True or False'), ('fill_gaps', 'Fill in the Gaps'), ('word_bank', 'Word Bank'), ('drop_down_text', 'Drop Down Text'), ('ordering', 'Ordering'), ('sorting', 'Sorting'), ('category', 'Category'), ('matching', 'Matching'), ('flashcards', 'Flashcards'), ('table', 'Table'), ('accordion', 'Accordion'), ('tabs', 'Tabs'), ('button_stack', 'Button Stack'), ('process', 'Process'), ('timeline', 'Timeline'), ('multiple_choice_knowledge_check', 'Multiple Choice Knowledge Check'), ('true_false_knowledge_check', 'True or False Knowledge Check'), ('fill_gaps_knowledge_check', 'Fill in the Gaps Knowledge Check'), ('word_bank_knowledge_check', 'Word Bank Knowledge Check'), ('drop_down_text_knowledge_check', 'Drop Down Text Knowledge Check'), ('ordering_knowledge_check', 'Ordering Knowledge Check'), ('sorting_knowledge_check', 'Sorting Knowledge Check'), ('categories_knowledge_check', 'Categories Knowledge Check'), ('matching_knowledge_check', 'Matching Knowledge Check'), ('word_order_knowledge_check', 'Word Order Knowledge Check'), ('picture_matching_knowledge_check', 'Picture Matching Knowledge Check'), ('picture_labeling_knowledge_check', 'Picture Labeling Knowledge Check'), ('text_block', 'Text Block'), ('text_article', 'Text Article'), ('text_quote', 'Text Quote'), ('text_highlighted', 'Text Highlighted'), ('info_box', 'Info Box'), ('icon_list', 'Icon List'), ('video', 'Video'), ('audio', 'Audio'), ('video_embed', 'Video Embebido'), ('attachment', 'Archivo Adjunto')], max_length=100)),
                ('tittle', models.CharField(blank=True, max_length=500, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('content_details', models.JSONField(blank=True, null=True)),
                ('multimedia', models.JSONField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='content_images/')),
                ('video', models.FileField(blank=True, null=True, upload_to='content_videos/')),
                ('video_transcription', models.TextField(blank=True, null=True)),
                ('embed_video', models.URLField(blank=True, null=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to='content_audios/')),
                ('audio_transcription', models.TextField(blank=True, null=True)),
                ('pdf', models.FileField(blank=True, null=True, upload_to='content_pdfs/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('stats', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='dashboard.classmodel')),
            ],
            options={
                'verbose_name': 'Contenido de Clase',
                'verbose_name_plural': 'Contenidos de Clase',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='classmodel',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='dashboard.coursemodel'),
        ),
        migrations.CreateModel(
            name='LayoutModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=300, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='course_covers/')),
                ('audio', models.FileField(blank=True, null=True, upload_to='class_audio/')),
                ('audio_script', models.TextField(blank=True, null=True)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layouts', to='dashboard.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='FillInTheGapsTaskModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('text_with_gaps', models.TextField(help_text="Texto con espacios para completar. Usa '{gap}' para indicar los espacios.")),
                ('keywords', models.JSONField(help_text='Palabras claves en formato JSON, en el orden de aparición de los espacios.')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de aparición de la tarea.')),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fill_in_the_gaps_tasks', to='dashboard.classmodel')),
                ('media', models.ManyToManyField(blank=True, related_name='fill_in_the_gaps_tasks', to='dashboard.mediamodel')),
            ],
        ),
        migrations.CreateModel(
            name='CategoriesTaskModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('categories', models.JSONField()),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de aparición de la tarea.')),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories_tasks', to='dashboard.classmodel')),
                ('media', models.ManyToManyField(blank=True, related_name='categories_tasks', to='dashboard.mediamodel')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='MultimediaBlockAttachmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('link_attachment', models.URLField(blank=True, null=True)),
                ('text_attachment', models.TextField(blank=True, null=True)),
                ('file_attachment', models.FileField(blank=True, help_text='Archivo adjunto (pdf, txt, etc.)', null=True, upload_to='attachments/')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='multimedia_block_videos/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multimedia_block_attachments', to='dashboard.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MultimediaBlockAudioModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('audio', models.FileField(blank=True, help_text='Archivo de audio', null=True, upload_to='multimedia_block_audios/')),
                ('script', models.TextField(blank=True, help_text='Transcripción de lo que se dice en el video', null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multimedia_block_audios', to='dashboard.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MultimediaBlockVideoEmbedModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('link_video', models.URLField(blank=True, null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='multimedia_block_videos/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multimedia_block_videos_embedded', to='dashboard.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MultimediaBlockVideoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('video', models.FileField(blank=True, help_text='Archivo de video', null=True, upload_to='multimedia_block_videos/')),
                ('script', models.TextField(blank=True, help_text='Transcripción de lo que se dice en el video', null=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='multimedia_block_videos/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multimedia_block_videos_uploaded', to='dashboard.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('script', models.TextField(blank=True, null=True)),
                ('question', models.JSONField()),
                ('cover', models.ImageField(blank=True, null=True, upload_to='cover_multiple_choice_tasks/')),
                ('audio', models.FileField(blank=True, null=True, upload_to='audio_multiple_choice_tasks/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('stats', models.BooleanField(default=False)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multiple_choice_tasks', to='dashboard.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='OrderingTaskModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('items', models.JSONField(help_text='Lista de elementos a ordenar en formato JSON.')),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de aparición de la tarea.')),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordering_tasks', to='dashboard.classmodel')),
                ('media', models.ManyToManyField(blank=True, related_name='ordering_tasks', to='dashboard.mediamodel')),
            ],
        ),
        migrations.CreateModel(
            name='TextBlockLayoutModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, help_text='Título del bloque de texto', max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('content', models.TextField(help_text='Contenido de texto')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_blocks', to='dashboard.classmodel')),
            ],
        ),
        migrations.CreateModel(
            name='TrueOrFalseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(blank=True, max_length=200, null=True)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('questions', models.JSONField()),
                ('order', models.PositiveIntegerField(default=0, help_text='Orden de aparición de la tarea.')),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='true_or_false_tasks', to='dashboard.classmodel')),
                ('media', models.ManyToManyField(blank=True, related_name='true_or_false_tasks', to='dashboard.mediamodel')),
            ],
        ),
        migrations.CreateModel(
            name='VideoLayoutModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tittle', models.CharField(help_text='Título del video', max_length=200)),
                ('instructions', models.TextField(blank=True, null=True)),
                ('video_file', models.FileField(blank=True, help_text='Archivo de video', null=True, upload_to='videos/')),
                ('script', models.TextField(blank=True, help_text='Transcripción de lo que se dice en el video', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='dashboard.classmodel')),
            ],
        ),
    ]
